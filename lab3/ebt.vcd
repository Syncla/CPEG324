$date
  Mon Apr 30 02:00:33 2018
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 1 # cin $end
$var reg 8 $ sum[7:0] $end
$var reg 1 % carryout $end
$var reg 1 & underflow $end
$scope module uut $end
$var reg 8 ' a[7:0] $end
$var reg 8 ( b[7:0] $end
$var reg 1 ) cin $end
$var reg 8 * sum[7:0] $end
$var reg 1 + carryout $end
$var reg 1 , underflow $end
$var reg 8 - prop[7:0] $end
$var reg 8 . gen[7:0] $end
$var reg 8 / c_int[7:0] $end
$var reg 1 0 slicesevensumout $end
$scope module inst_cla_slice0 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 cin $end
$var reg 1 4 p $end
$var reg 1 5 g $end
$var reg 1 6 sum_out $end
$upscope $end
$scope module inst_cla_slice1 $end
$var reg 1 7 a $end
$var reg 1 8 b $end
$var reg 1 9 cin $end
$var reg 1 : p $end
$var reg 1 ; g $end
$var reg 1 < sum_out $end
$upscope $end
$scope module inst_cla_slice2 $end
$var reg 1 = a $end
$var reg 1 > b $end
$var reg 1 ? cin $end
$var reg 1 @ p $end
$var reg 1 A g $end
$var reg 1 B sum_out $end
$upscope $end
$scope module inst_cla_slice3 $end
$var reg 1 C a $end
$var reg 1 D b $end
$var reg 1 E cin $end
$var reg 1 F p $end
$var reg 1 G g $end
$var reg 1 H sum_out $end
$upscope $end
$scope module inst_cla_slice4 $end
$var reg 1 I a $end
$var reg 1 J b $end
$var reg 1 K cin $end
$var reg 1 L p $end
$var reg 1 M g $end
$var reg 1 N sum_out $end
$upscope $end
$scope module inst_cla_slice5 $end
$var reg 1 O a $end
$var reg 1 P b $end
$var reg 1 Q cin $end
$var reg 1 R p $end
$var reg 1 S g $end
$var reg 1 T sum_out $end
$upscope $end
$scope module inst_cla_slice6 $end
$var reg 1 U a $end
$var reg 1 V b $end
$var reg 1 W cin $end
$var reg 1 X p $end
$var reg 1 Y g $end
$var reg 1 Z sum_out $end
$upscope $end
$scope module inst_cla_slice7 $end
$var reg 1 [ a $end
$var reg 1 \ b $end
$var reg 1 ] cin $end
$var reg 1 ^ p $end
$var reg 1 _ g $end
$var reg 1 ` sum_out $end
$upscope $end
$scope module inst_cla_block $end
$var reg 8 a p[7:0] $end
$var reg 8 b g[7:0] $end
$var reg 8 c cout[7:0] $end
$var reg 8 d cint[7:0] $end
$upscope $end
$scope module inst_uf $end
$var reg 1 e signa $end
$var reg 1 f signb $end
$var reg 1 g signr $end
$var reg 1 h uf $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUU !
bUUUUUUUU "
0#
bUUUUUUUU $
U%
U&
bUUUUUUUU '
bUUUUUUUU (
0)
bUUUUUUUU *
U+
U,
bUUUUUUUU -
bUUUUUUUU .
bUUUUUUUU /
U0
U1
U2
03
U4
U5
U6
U7
U8
U9
U:
U;
U<
U=
U>
U?
U@
UA
UB
UC
UD
UE
UF
UG
UH
UI
UJ
UK
UL
UM
UN
UO
UP
UQ
UR
US
UT
UU
UV
UW
UX
UY
UZ
U[
U\
U]
U^
U_
U`
bUUUUUUUU a
bUUUUUUUU b
bUUUUUUUU c
bUUUUUUUU d
Ue
Uf
Ug
Uh
#10000000
b11111111 !
b00000000 "
b11111111 $
0%
0&
b11111111 '
b00000000 (
b11111111 *
0+
0,
b11111111 -
b00000000 .
b00000000 /
10
11
02
14
05
16
17
08
09
1:
0;
1<
1=
0>
0?
1@
0A
1B
1C
0D
0E
1F
0G
1H
1I
0J
0K
1L
0M
1N
1O
0P
0Q
1R
0S
1T
1U
0V
0W
1X
0Y
1Z
1[
0\
0]
1^
0_
1`
b11111111 a
b00000000 b
b00000000 c
b00000000 d
1e
0f
1g
0h
#110000000
#120000000
b00001111 !
b00001111 $
b00001111 '
b00001111 *
b00001111 -
00
0I
0L
0N
0O
0R
0T
0U
0X
0Z
0[
0^
0`
b00001111 a
0e
0g
#220000000
#230000000
b00010000 !
b00010000 "
b00100000 $
b00010000 '
b00010000 (
b00100000 *
b00000000 -
b00010000 .
b00010000 /
01
04
06
07
0:
0<
0=
0@
0B
0C
0F
0H
1I
1J
1M
1Q
1T
b00000000 a
b00010000 b
b00010000 c
b00010000 d
#330000000
#340000000
b10000000 !
b10000000 "
b00000000 $
1&
b10000000 '
b10000000 (
b00000000 *
1,
b10000000 .
b10000000 /
0I
0J
0M
0Q
0T
1[
1\
1_
b10000000 b
b10000000 c
b10000000 d
1e
1f
1h
#440000000
