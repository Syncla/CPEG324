$date
  Thu Apr 26 15:00:47 2018
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! i1[7:0] $end
$var reg 8 " o[7:0] $end
$scope module c1 $end
$var reg 8 # input[7:0] $end
$var reg 8 $ output[7:0] $end
$var reg 8 % fliptoadd[7:0] $end
$var reg 8 & one[7:0] $end
$scope module inst_flip $end
$var reg 8 ' in1[7:0] $end
$var reg 8 ( out1[7:0] $end
$upscope $end
$scope module inst_adder $end
$var reg 8 ) a[7:0] $end
$var reg 8 * b[7:0] $end
$var reg 1 + cin $end
$var reg 8 , sum[7:0] $end
$var reg 1 - carryout $end
$var reg 1 . underflow $end
$var reg 8 / prop[7:0] $end
$var reg 8 0 gen[7:0] $end
$var reg 8 1 c_int[7:0] $end
$var reg 1 2 slicesevensumout $end
$scope module inst_cla_slice0 $end
$var reg 1 3 a $end
$var reg 1 4 b $end
$var reg 1 5 cin $end
$var reg 1 6 p $end
$var reg 1 7 g $end
$var reg 1 8 sum_out $end
$upscope $end
$scope module inst_cla_slice1 $end
$var reg 1 9 a $end
$var reg 1 : b $end
$var reg 1 ; cin $end
$var reg 1 < p $end
$var reg 1 = g $end
$var reg 1 > sum_out $end
$upscope $end
$scope module inst_cla_slice2 $end
$var reg 1 ? a $end
$var reg 1 @ b $end
$var reg 1 A cin $end
$var reg 1 B p $end
$var reg 1 C g $end
$var reg 1 D sum_out $end
$upscope $end
$scope module inst_cla_slice3 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G cin $end
$var reg 1 H p $end
$var reg 1 I g $end
$var reg 1 J sum_out $end
$upscope $end
$scope module inst_cla_slice4 $end
$var reg 1 K a $end
$var reg 1 L b $end
$var reg 1 M cin $end
$var reg 1 N p $end
$var reg 1 O g $end
$var reg 1 P sum_out $end
$upscope $end
$scope module inst_cla_slice5 $end
$var reg 1 Q a $end
$var reg 1 R b $end
$var reg 1 S cin $end
$var reg 1 T p $end
$var reg 1 U g $end
$var reg 1 V sum_out $end
$upscope $end
$scope module inst_cla_slice6 $end
$var reg 1 W a $end
$var reg 1 X b $end
$var reg 1 Y cin $end
$var reg 1 Z p $end
$var reg 1 [ g $end
$var reg 1 \ sum_out $end
$upscope $end
$scope module inst_cla_slice7 $end
$var reg 1 ] a $end
$var reg 1 ^ b $end
$var reg 1 _ cin $end
$var reg 1 ` p $end
$var reg 1 a g $end
$var reg 1 b sum_out $end
$upscope $end
$scope module inst_cla_block $end
$var reg 8 c p[7:0] $end
$var reg 8 d g[7:0] $end
$var reg 8 e cout[7:0] $end
$var reg 8 f cint[7:0] $end
$upscope $end
$scope module inst_uf $end
$var reg 1 g signa $end
$var reg 1 h signb $end
$var reg 1 i signr $end
$var reg 1 j uf $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b10010010 !
b01101110 "
b10010010 #
b01101110 $
b01101101 %
b00000001 &
b10010010 '
b01101101 (
b01101101 )
b00000001 *
0+
b01101110 ,
0-
0.
b01101100 /
b00000001 0
b00000001 1
02
13
14
05
06
17
08
09
0:
1;
0<
0=
1>
1?
0@
0A
1B
0C
1D
1E
0F
0G
1H
0I
1J
0K
0L
0M
0N
0O
0P
1Q
0R
0S
1T
0U
1V
1W
0X
0Y
1Z
0[
1\
0]
0^
0_
0`
0a
0b
b01101100 c
b00000001 d
b00000001 e
b00000001 f
0g
0h
0i
0j
#1000000
b01101101 !
b10010011 "
b01101101 #
b10010011 $
b10010010 %
b01101101 '
b10010010 (
b10010010 )
b10010011 ,
b10010011 /
b00000000 0
b00000000 1
12
03
16
07
18
19
0;
1<
1>
0?
0A
0B
0D
0E
0H
0J
1K
1N
1P
0Q
0T
0V
0W
0Z
0\
1]
1`
1b
b10010011 c
b00000000 d
b00000000 e
b00000000 f
1g
1i
#2000000
b10101010 !
b01010110 "
b10101010 #
b01010110 $
b01010101 %
b10101010 '
b01010101 (
b01010101 )
b01010110 ,
b01010100 /
b00000001 0
b00000001 1
02
13
06
17
08
09
1;
0<
1>
1?
1B
1D
1W
1Z
1\
0]
0`
0b
b01010100 c
b00000001 d
b00000001 e
b00000001 f
0g
0i
#3000000
b01010101 !
b10101011 "
b01010101 #
b10101011 $
b10101010 %
b01010101 '
b10101010 (
b10101010 )
b10101011 ,
b10101011 /
b00000000 0
b00000000 1
12
03
16
07
18
19
0;
1<
1>
0?
0A
0B
0D
1E
1H
1J
0K
0N
0P
1Q
1T
1V
0W
0Z
0\
1]
1`
1b
b10101011 c
b00000000 d
b00000000 e
b00000000 f
1g
1i
#4000000
